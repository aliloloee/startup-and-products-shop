version: '3'

services: 

  startup :
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: banpars
    volumes: 
      - .:/startup
      - startup_static_volume:/startup/staticfiles
      - startup_dynamic_volume:/startup/media
    restart: always
    ports: 
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py initadmin && gunicorn --chdir BANPars --bind :8000 BANPars.wsgi:application"
    networks: 
      - startup_network
      - nginx_network
    depends_on: 
      - db
      - cache

  cache :
    container_name: redis_db
    image: redis
    command: redis-server --requirepass $REDIS_PASS --appendonly yes
    environment:
      - REDIS_PASS=${REDIS_PASS}
    # ports: 
    #   - "6379:6379"
    networks: 
      - startup_network

  db :
    container_name: postgresql_db
    image: postgres
    volumes: 
      - banpars_postgresql:/var/lib/postgresql/data
    restart: always
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # ports: 
    #   - "5431:5432"
    networks: 
      - startup_network

  pgadmin :
    container_name: pgadmin4
    image: dpage/pgadmin4
    volumes: 
      - banpars_pgadmin4:/var/lib/pgadmin
    restart: always
    environment: 
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "5050:80"
    networks: 
      - startup_network

  celery :
    restart: always
    build: 
      context: .
    command: celery -A BANPars worker -l info
    volumes: 
      - .:/startup
    container_name: celery
    networks: 
      - startup_network
    depends_on: 
      - db
      - cache
      - startup

  celery_beat :
    restart: always
    build: 
      context: .
    command: celery -A BANPars beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes: 
      - .:/startup
    container_name: celery_beat
    networks:
      - startup_network
    depends_on: 
      - celery

volumes: 
  banpars_postgresql :
    external: true
  banpars_pgadmin4 :
    external: true
  startup_static_volume :
    external: true
  startup_dynamic_volume :
    external: true

networks: 
  startup_network :
    external: true
  nginx_network :
    external: true


